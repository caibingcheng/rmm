#!/bin/sh

VERSION=0.1.0
version()
{
    echo "rmm version: V"$VERSION
}

TRASHPATH=0
checkTrash()
{
    TRASHPATH=$HOME/.trash
    if [ ! -d "$TRASHPATH" ];then
        mkdir $TRASHPATH/
    fi
}

DATEPATH=0
checkDate()
{
    DATEPATH=`date +%Y%m%d`
    if [ ! -d "$TRASHPATH/$DATEPATH/" ];then
        mkdir $TRASHPATH/$DATEPATH/
        touch $TRASHPATH/$DATEPATH/removelog
        touch $TRASHPATH/$DATEPATH/restorelog
    fi
}

checkExist()
{
    EXIST=0
    if [ -d "$1" ];then
        EXIST=1
    fi
    if [ -f "$1" ];then
        EXIST=1
    fi
    echo $EXIST
    return $?
}

EXIST=0
showTrashDate()
{
    EXIST=0
    for dir in $TRASHPATH/*
    do
        if [ -d "$dir" ]; then
            BASENAME=$(basename $dir)
            echo $BASENAME
            EXIST=1
        fi
    done
}
checkDeleteTrash()
{
    EXIST=0
    dir=$TRASHPATH/$1
    if [ -d "$dir" ];then
        EXIST=1
    fi
    if [ -f "$dir" ];then
        EXIST=1
    fi
    if [ -z "$1" ];then
        EXIST=0
    fi
    echo $EXIST
    return $?
}
deleteTrashByDate()
{
    showTrashDate
    if [ $EXIST -eq 0 ]; then
        return
    fi
    echo -n "delete: "
    read dir
    exist=$(checkDeleteTrash $dir)
    if [ -n $exist ]; then
        /bin/rm -fr $TRASHPATH/$dir
    fi
}

SRC=""
DST=""
EMPTY=1
showBack()
{
    EMPTY=1
    for dir in $TRASHPATH/*
    do
        if [ -d "$dir" ]; then
            BASENAME=$(basename $dir)
            if [ -n "$(cat $dir/removelog)" ];
            then
                if [ -z "$1" ];then
                    echo $BASENAME":"
                fi
                EMPTY=0
            fi
            while read line
            do
                src=`echo $line|awk -F ' ' '{print $1}'`
                dst=`echo $line|awk -F ' ' '{print $2}'`
                if [ -n "$1" ];then
                    flag=$(echo $BASENAME/$(basename $dst) | awk "/$(basename $1)/")
                    echo $flag
                    if [ -n "$flag" ];then
                        sed -i "/$(basename $dst)/d" $dir/removelog                    
                        echo "Restore $BASENAME/$(basename $dst) --> $src"
                        echo "Restore $BASENAME/$(basename $dst) --> $src" >> $TRASHPATH/$DATEPATH/restorelog
                        mv -f $dst $src
                    fi
                else
                    echo "    --  $src --> $BASENAME/$(basename $dst)"
                fi
            done < $dir/removelog
        fi
    done
}
back()
{
    showBack
    if [ $EMPTY -eq 1 ];then
        return
    fi
    echo -n "restore: "
    read dir
    exist=$(checkDeleteTrash $dir)
    if [ $exist -eq 0 ];then
        echo "Invalid $dir"
        return
    fi
    showBack $dir
}

help()
{
    echo '--rmm: help information'
    echo '       -h --help    get help information'
    echo '       --version    get rmm version'
    echo '       -b --back    restore the delete files[dirs]'
    echo '       -d --delete  delete by date'
}

checkTrash

TEMP=$(getopt -q -o v,s,f,i,I,r,R,d,v,b,h --long help,show,version,delete,back -- "$@")
if [ "$?" != "0" ]; then
    echo '--rmm: Invalid option'
    exit 1
fi
eval set -- "$TEMP"

while true; do
    case "$1" in
        -h|--help)
            help
            exit 1;;
        -v|--version)
            version
            exit 1;;
        -s|--show)
            showTrashDate
            shift 1;;
        -d|--delete)
            deleteTrashByDate
            shift 1;;
        -b|--back)
            back
            shift 1;;
        "--") shift; break;;
        *)
            shift;;
    esac
done

for arg in $@; do
    EXIST=$(checkExist $arg)
    if [ $EXIST -eq 1 ]; then
        checkDate
        head="$(date "+%H_%M_%S_%N")"_
        BASENAME=$(basename $arg)
        src=$(readlink -f $arg)
        dst=$TRASHPATH/$DATEPATH/$head$BASENAME
        if [ -h "$arg" ] # soft link file
        then
            rm -fr $arg
        else
            echo "$src $dst" >> $TRASHPATH/$DATEPATH/removelog
            mv -f $src $dst
        fi
    fi
done

# tree ~/.trash